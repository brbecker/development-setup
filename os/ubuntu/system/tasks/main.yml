---
# tasks file for system
- name: Output variables
  ansible.builtin.debug:
    var: "{{ item }}"
  loop:
    - config
    - target_release_major
    - target_release_minor
    - target_release_lts
  when: true

- name: Install aptitude
  ansible.builtin.apt:
    name: aptitude
    state: latest
    update_cache: true

- name: Change to normal release if target is not LTS
  ansible.builtin.lineinfile:
    path: /etc/update-manager/release-upgrades
    regexp: "^\\s*#?\\s*Prompt="
    line: "Prompt=normal"
    state: present
  when:
    - target_release_major > ansible_distribution_major_version or target_release_minor > ansible_distribution_minor_version
    - not target_release_lts

- name: Perform full upgrade
  ansible.builtin.apt:
    upgrade: full
  when:
    - target_release_major > ansible_distribution_major_version or target_release_minor > ansible_distribution_minor_version

# ---
# From https://www.digitalocean.com/community/tutorials/how-to-use-ansible-to-automate-initial-server-setup-on-ubuntu-20-04
# - hosts: all
#   become: true
#   vars:
#     created_username: sammy

#   tasks:
#     - name: Install aptitude
#       apt:
#         name: aptitude
#         state: latest
#         update_cache: true

#     - name: Setup passwordless sudo
#       lineinfile:
#         path: /etc/sudoers
#         state: present
#         regexp: '^%sudo'
#         line: '%sudo ALL=(ALL) NOPASSWD: ALL'
#         validate: '/usr/sbin/visudo -cf %s'

#     - name: Create a new regular user with sudo privileges
#       user:
#         name: "{{ created_username }}"
#         state: present
#         groups: sudo
#         append: true
#         create_home: true

#     - name: Set authorized key for remote user
#       ansible.posix.authorized_key:
#         user: "{{ created_username }}"
#         state: present
#         key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"

#     - name: Disable password authentication for root
#       lineinfile:
#         path: /etc/ssh/sshd_config
#         state: present
#         regexp: '^#?PermitRootLogin'
#         line: 'PermitRootLogin prohibit-password'

#     - name: Update apt and install required system packages
#       apt:
#         pkg:
#           - curl
#           - vim
#           - git
#           - ufw
#         state: latest
#         update_cache: true

#     - name: UFW - Allow SSH connections
#       community.general.ufw:
#         rule: allow
#         name: OpenSSH

#     - name: UFW - Enable and deny by default
#       community.general.ufw:
#         state: enabled
#         default: deny
